module org.frege.JavaFX where

import org.frege.AllNodes

import frege.java.Net (URL)

native getResource :: ClassLoader -> String -> IO URL

-- ---
native asTextArea "(javafx.scene.control.TextArea)" :: Node -> IO TextArea

data Caster = mutable native org.frege.Caster where
    native classifyNode org.frege.Caster.classifyNode :: Node -> IO AllNodes

fromNode = Caster.classifyNode

textable allNode selector = case allNode of
    TextArea ta -> ta
    NullNode nn -> error ("Sorry, you didn't supply any node. Wrong lookup for '" ++ selector ++"'?") -- errors are ok at startup only. fail fast
    _           -> error "Specific type of Node is not known."

locate :: Scene -> String -> IO TextArea
locate scene selector = do
    allNode    <- scene.lookup selector >>= fromNode
    return (textable allNode selector)
-- ---

data FregeEventHandler = mutable native org.frege.FregeEventHandler where
    native new :: (KeyEvent -> IO () ) -> IO FregeEventHandler

-- ---

data FXMLLoader = mutable native javafx.fxml.FXMLLoader where
    native load    javafx.fxml.FXMLLoader.load :: URL -> IO Parent throws IOException

data FregeFX = mutable native org.frege.FregeFX where
    native launch  org.frege.FregeFX.launch :: ( Stage -> IO () ) -> IO ()
    native fxml    org.frege.FregeFX.fxml   :: String -> String -> IO Parent



