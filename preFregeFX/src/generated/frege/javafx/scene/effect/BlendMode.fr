data BlendMode = mutable native javafx.scene.effect.BlendMode where

  native src_over "javafx.scene.effect.BlendMode.SRC_OVER" :: IO BlendMode
  native src_atop "javafx.scene.effect.BlendMode.SRC_ATOP" :: IO BlendMode
  native add "javafx.scene.effect.BlendMode.ADD" :: IO BlendMode
  native multiply "javafx.scene.effect.BlendMode.MULTIPLY" :: IO BlendMode
  native screen "javafx.scene.effect.BlendMode.SCREEN" :: IO BlendMode
  native overlay "javafx.scene.effect.BlendMode.OVERLAY" :: IO BlendMode
  native darken "javafx.scene.effect.BlendMode.DARKEN" :: IO BlendMode
  native lighten "javafx.scene.effect.BlendMode.LIGHTEN" :: IO BlendMode
  native color_dodge "javafx.scene.effect.BlendMode.COLOR_DODGE" :: IO BlendMode
  native color_burn "javafx.scene.effect.BlendMode.COLOR_BURN" :: IO BlendMode
  native hard_light "javafx.scene.effect.BlendMode.HARD_LIGHT" :: IO BlendMode
  native soft_light "javafx.scene.effect.BlendMode.SOFT_LIGHT" :: IO BlendMode
  native difference "javafx.scene.effect.BlendMode.DIFFERENCE" :: IO BlendMode
  native exclusion "javafx.scene.effect.BlendMode.EXCLUSION" :: IO BlendMode
  native red "javafx.scene.effect.BlendMode.RED" :: IO BlendMode
  native green "javafx.scene.effect.BlendMode.GREEN" :: IO BlendMode
  native blue "javafx.scene.effect.BlendMode.BLUE" :: IO BlendMode

  native valueOf "javafx.scene.effect.BlendMode.valueOf" :: String -> IO BlendMode

  native values "javafx.scene.effect.BlendMode.values" :: () -> STMutable s (JArray BlendMode)

derive Serializable BlendMode

