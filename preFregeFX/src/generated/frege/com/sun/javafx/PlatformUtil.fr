data PlatformUtil = pure native com.sun.javafx.PlatformUtil where

  pure native new :: () -> PlatformUtil

  pure native getEmbeddedType "com.sun.javafx.PlatformUtil.getEmbeddedType" :: () -> String

  pure native isAndroid "com.sun.javafx.PlatformUtil.isAndroid" :: () -> boolean

  pure native isEmbedded "com.sun.javafx.PlatformUtil.isEmbedded" :: () -> boolean

  pure native isIOS "com.sun.javafx.PlatformUtil.isIOS" :: () -> boolean

  pure native isLinux "com.sun.javafx.PlatformUtil.isLinux" :: () -> boolean

  pure native isMac "com.sun.javafx.PlatformUtil.isMac" :: () -> boolean

  pure native isSolaris "com.sun.javafx.PlatformUtil.isSolaris" :: () -> boolean

  pure native isUnix "com.sun.javafx.PlatformUtil.isUnix" :: () -> boolean

  pure native isWin7OrLater "com.sun.javafx.PlatformUtil.isWin7OrLater" :: () -> boolean

  pure native isWinVistaOrLater "com.sun.javafx.PlatformUtil.isWinVistaOrLater" :: () -> boolean

  pure native isWindows "com.sun.javafx.PlatformUtil.isWindows" :: () -> boolean

  pure native useEGL "com.sun.javafx.PlatformUtil.useEGL" :: () -> boolean

  pure native useEGLWindowComposition "com.sun.javafx.PlatformUtil.useEGLWindowComposition" :: () -> boolean

  pure native useGLES2 "com.sun.javafx.PlatformUtil.useGLES2" :: () -> boolean


