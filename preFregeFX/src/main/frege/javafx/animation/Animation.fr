data Animation = mutable native javafx.animation.Animation where

  pure native indefinite "javafx.animation.Animation.INDEFINITE" :: Int

  native autoReverseProperty :: Animation -> IO BooleanProperty

  native currentRateProperty :: Animation -> IO ReadOnlyDoubleProperty

  native currentTimeProperty :: Animation -> IO (ReadOnlyObjectProperty Duration)

  native cycleCountProperty :: Animation -> IO IntegerProperty

  native cycleDurationProperty :: Animation -> IO (ReadOnlyObjectProperty Duration)

  native delayProperty :: Animation -> IO (ObjectProperty Duration)

  native getCuePoints :: Animation -> IO (ObservableMap String Duration)

  native getCurrentRate :: Animation -> IO Double

  native getCurrentTime :: Animation -> IO Duration

  native getCycleCount :: Animation -> IO Int

  native getCycleDuration :: Animation -> IO Duration

  native getDelay :: Animation -> IO Duration

  native getOnFinished :: Animation -> IO (EventHandler ActionEvent)

  native getRate :: Animation -> IO Double

  native getStatus :: Animation -> IO Animation_Status

  native getTargetFramerate :: Animation -> IO Double

  native getTotalDuration :: Animation -> IO Duration

  native isAutoReverse :: Animation -> IO Bool

  native jumpTo :: Animation -> String -> IO ()
                 | Animation -> Duration -> IO ()

  native onFinishedProperty :: Animation -> IO (ObjectProperty (EventHandler ActionEvent))

  native pause :: Animation -> IO ()

  native play :: Animation -> IO ()

  native playFrom :: Animation -> String -> IO ()
                   | Animation -> Duration -> IO ()

  native playFromStart :: Animation -> IO ()

  native rateProperty :: Animation -> IO DoubleProperty

  native setAutoReverse :: Animation -> Bool -> IO ()

  native setCycleCount :: Animation -> Int -> IO ()

  native setDelay :: Animation -> Duration -> IO ()

  native setOnFinished :: Animation -> EventHandler ActionEvent -> IO ()

  native setRate :: Animation -> Double -> IO ()

  native statusProperty :: Animation -> IO (ReadOnlyObjectProperty Animation_Status)

  native stop :: Animation -> IO ()

  native totalDurationProperty :: Animation -> IO (ReadOnlyObjectProperty Duration)


