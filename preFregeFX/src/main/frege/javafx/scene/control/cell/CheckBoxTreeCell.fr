data CheckBoxTreeCell t = mutable native javafx.scene.control.cell.CheckBoxTreeCell where

  native new :: () -> IO (CheckBoxTreeCell t)
              | Callback (TreeItem t) (ObservableValue Boolean) -> IO (CheckBoxTreeCell t)
              | Callback (TreeItem t) (ObservableValue Boolean) -> StringConverter (TreeItem t) -> IO (CheckBoxTreeCell t)

  native converterProperty :: CheckBoxTreeCell t -> IO (ObjectProperty (StringConverter (TreeItem t)))

  native forTreeView "javafx.scene.control.cell.CheckBoxTreeCell.forTreeView" :: Callback (TreeItem t) (ObservableValue Boolean) -> IO (Callback (TreeView t) (TreeCell t))
                                                                               | Callback (TreeItem t) (ObservableValue Boolean) -> StringConverter (TreeItem t) -> IO (Callback (TreeView t) (TreeCell t))
                                                                               | () -> IO (Callback (TreeView t) (TreeCell t))

  native getConverter :: CheckBoxTreeCell t -> IO (StringConverter (TreeItem t))

  native getSelectedStateCallback :: CheckBoxTreeCell t -> IO (Callback (TreeItem t) (ObservableValue Boolean))

  native selectedStateCallbackProperty :: CheckBoxTreeCell t -> IO (ObjectProperty (Callback (TreeItem t) (ObservableValue Boolean)))

  native setConverter :: CheckBoxTreeCell t -> StringConverter (TreeItem t) -> IO ()

  native setSelectedStateCallback :: CheckBoxTreeCell t -> Callback (TreeItem t) (ObservableValue Boolean) -> IO ()

  native updateItem :: CheckBoxTreeCell t -> t -> Bool -> IO ()


