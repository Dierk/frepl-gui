module org.frege.AllNodes where

import frege.Prelude hiding(ListView)

import fregefx.javafx.application.Platform
import fregefx.javafx.fxml.FXMLLoader
import fregefx.javafx.scene.Node
import fregefx.javafx.scene.Parent
import fregefx.javafx.scene.input.KeyEvent
import fregefx.javafx.scene.text.Font
import fregefx.javafx.scene.control.Button
import fregefx.javafx.scene.control.TextArea
import fregefx.javafx.stage.WindowEvent
import fregefx.javafx.event.EventHandler
import fregefx.javafx.collections.ObservableList


data FregeFX = mutable native org.frege.FregeFX where
    native launch  org.frege.FregeFX.launch :: ( Stage -> IO () ) -> IO ()
    native fxml    org.frege.FregeFX.fxml   :: String -> String -> IO Parent


data ListView = mutable native javafx.scene.control.ListView where
    native getItems          :: ListView -> IO ObservableList
    native getSelectionModel :: ListView -> IO SelectionModel


data SelectionModel = mutable native javafx.scene.control.SelectionModel where
    native selectedItemProperty :: SelectionModel -> IO ReadOnlyObjectProperty
    native getSelectedIndex     :: SelectionModel -> IO Int             -- -1 if there is no selection
    native clearAndSelect       :: SelectionModel -> Int -> IO ()
    native clearSelection       :: SelectionModel -> IO ()

data ReadOnlyObjectProperty = mutable native javafx.beans.property.ReadOnlyObjectProperty where
    native addListener :: ReadOnlyObjectProperty -> ChangeListener -> IO ()

data ChangeListener = mutable native org.frege.FregeChangeListener where
    native new :: (String -> String -> IO()) -> IO ChangeListener -- make later polymorphic

data Scene = mutable native javafx.scene.Scene where
    native new              :: Parent -> Double -> Double -> IO Scene
    native lookup           :: Scene  -> String -> IO (Maybe Node)
    native setOnKeyTyped    :: Scene -> KeyEventHandler -> IO ()
    native setOnKeyReleased :: Scene -> KeyEventHandler -> IO ()

data Stage = mutable native javafx.stage.Stage where
    native show         :: Stage -> IO ()
    native setScene     :: Stage -> Scene  -> IO ()
    native setTitle     :: Stage -> String -> IO ()
    native setOnHidden  :: Stage -> WindowEventHandler -> IO ()

data FileChooser = mutable native javafx.stage.FileChooser where
    native new            :: () -> IO FileChooser
    native setTitle       :: FileChooser -> String -> IO ()
    native showOpenDialog :: FileChooser -> Stage -> IO (Maybe (MutableIO File))


data TextArea = mutable native javafx.scene.control.TextArea

data AllNodes = TextArea    TextArea
              | Button      Button
              | ListView    ListView



