module fregefx.javafx.scene.control.TextArea where

import fregefx.javafx.event.EventHandler
import fregefx.javafx.scene.text.Font

data TextArea = mutable native javafx.scene.control.TextArea where

  pure native default_pref_column_count   "javafx.scene.control.TextArea.DEFAULT_PREF_COLUMN_COUNT"   :: Int
  pure native default_pref_row_count      "javafx.scene.control.TextArea.DEFAULT_PREF_ROW_COUNT"      :: Int
  pure native default_paragraph_capacity  "javafx.scene.control.TextArea.DEFAULT_PARAGRAPH_CAPACITY"  :: Int

  native new :: () -> IO TextArea
              | String -> IO TextArea

--  native getClassCssMetaData "javafx.scene.control.TextArea.getClassCssMetaData" :: () -> STMutable s (List (CssMetaData Styleable Object))
--  native getControlCssMetaData :: TextArea -> IO (List (CssMetaData Styleable Object))
--  native getParagraphs :: TextArea -> IO (ObservableList CharSequence)
  native getPrefColumnCount :: TextArea -> IO Int
  native getPrefRowCount    :: TextArea -> IO Int
  native getScrollLeft      :: TextArea -> IO Double
  native getScrollTop       :: TextArea -> IO Double
  native isWrapText         :: TextArea -> IO Bool
--  native prefColumnCountProperty :: TextArea -> IO IntegerProperty
--  native prefRowCountProperty :: TextArea -> IO IntegerProperty
--  native scrollLeftProperty :: TextArea -> IO DoubleProperty
--  native scrollTopProperty :: TextArea -> IO DoubleProperty
  native setPrefColumnCount :: TextArea -> Int -> IO ()
  native setPrefRowCount    :: TextArea -> Int -> IO ()
  native setScrollLeft      :: TextArea -> Double -> IO ()
  native setScrollTop       :: TextArea -> Double -> IO ()
  native setWrapText        :: TextArea -> Bool -> IO ()
--  native wrapTextProperty :: TextArea -> IO BooleanProperty

-- ------- should go into superclasses -------
  native getText          :: TextArea -> IO String
  native setText          :: TextArea -> String -> IO ()
  native getCaretPosition :: TextArea -> IO Int
  native insertText       :: TextArea -> Int -> String -> IO ()
  native appendText       :: TextArea -> String -> IO()
  native setOnKeyTyped    :: TextArea -> KeyEventHandler -> IO () -- overriding Node
  native setOnKeyReleased :: TextArea -> KeyEventHandler -> IO () -- overriding Node
  native requestFocus     :: TextArea -> IO ()
  native getFont          :: TextArea -> IO Font
  native setFont          :: TextArea -> Font -> IO ()
