module org.frege.AllNodes where

data KeyEvent = mutable native javafx.scene.input.KeyEvent where
    native isMetaDown       :: KeyEvent -> IO Bool
    native isShortcutDown   :: KeyEvent -> IO Bool
    native getCharacter     :: KeyEvent -> IO String

data Node   = mutable native javafx.scene.Node
data Parent = mutable native javafx.scene.Parent
data Event = mutable native javafx.event.Event -- well Events shouldn't be mutable, but in JavaFX, they are
data EventHandler = mutable native javafx.event.EventHandler -- most likely not mutable, at least not in our wrapper impl

data Button = mutable native javafx.scene.control.Button where
    native new      :: String ->  IO Button

data TextArea = mutable native javafx.scene.control.TextArea where
    native new      :: String ->  IO TextArea
    native getText  :: TextArea -> IO String
    native setText  :: TextArea -> String -> IO ()
    native setOnKeyTyped :: TextArea -> EventHandler -> IO () -- this could be KeyEventHandler but that is only compiled later

data Scene = mutable native javafx.scene.Scene where
    native new   :: Parent -> Double -> Double -> IO Scene
    native lookup :: Scene  -> String -> IO Node

data Stage = mutable native javafx.stage.Stage where
    native show     :: Stage -> IO ()
    native setScene :: Stage -> Scene  -> IO ()
    native setTitle :: Stage -> String -> IO ()

data NullNode = mutable native javafx.scene.Group where -- we are using Group as the impl class for the sole purpose to have a Node class that is already on the CP
    native new      :: NullNode -> IO NullNode
data BottomNode = mutable native javafx.scene.Group where
    native new      :: BottomNode -> IO BottomNode

data AllNodes = TextArea    TextArea
              | Button      Button
              | NullNode    NullNode
              | BottomNode  BottomNode
